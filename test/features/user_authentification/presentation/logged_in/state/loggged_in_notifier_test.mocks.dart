// Mocks generated by Mockito 5.4.4 from annotations
// in faro_clean_tdd/test/features/user_authentification/presentation/logged_in/state/loggged_in_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:faro_clean_tdd/features/user_authentification/domain/entities/user.dart'
    as _i6;
import 'package:faro_clean_tdd/features/user_authentification/domain/repositories/user_authentification_repository.dart'
    as _i2;
import 'package:faro_clean_tdd/features/user_authentification/domain/usecases/get_user_info.dart'
    as _i3;
import 'package:faro_clean_tdd/features/user_authentification/domain/usecases/log_in_with_token.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserAuthentificationRepository_0 extends _i1.SmartFake
    implements _i2.UserAuthentificationRepository {
  _FakeUserAuthentificationRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetUserInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetUserInfo extends _i1.Mock implements _i3.GetUserInfo {
  MockGetUserInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserAuthentificationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserAuthentificationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.UserAuthentificationRepository);

  @override
  _i4.Future<Map<String, dynamic>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}

/// A class which mocks [LogInWithToken].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogInWithToken extends _i1.Mock implements _i5.LogInWithToken {
  MockLogInWithToken() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserAuthentificationRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserAuthentificationRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.UserAuthentificationRepository);

  @override
  _i4.Future<_i6.User?> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<_i6.User?>.value(),
      ) as _i4.Future<_i6.User?>);
}
