// Mocks generated by Mockito 5.4.3 from annotations
// in faro_clean_tdd/test/features/contacts/data/repositories/contact_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:faro_clean_tdd/core/network/network_info.dart' as _i2;
import 'package:faro_clean_tdd/core/util/get_contact_list.dart' as _i6;
import 'package:faro_clean_tdd/features/contacts/data/datasources/contact_remote_data_source.dart'
    as _i4;
import 'package:faro_clean_tdd/features/contacts/domain/entities/contact.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i2.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [ContactRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactRemoteDataSource extends _i1.Mock
    implements _i4.ContactRemoteDataSource {
  MockContactRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.Contact>> fetchContacts(
          {required List<String>? numbersList}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchContacts,
          [],
          {#numbersList: numbersList},
        ),
        returnValue: _i3.Future<List<_i5.Contact>>.value(<_i5.Contact>[]),
      ) as _i3.Future<List<_i5.Contact>>);
}

/// A class which mocks [GetContactList].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetContactList extends _i1.Mock implements _i6.GetContactList {
  MockGetContactList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<String>> getContacts() => (super.noSuchMethod(
        Invocation.method(
          #getContacts,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);
}
