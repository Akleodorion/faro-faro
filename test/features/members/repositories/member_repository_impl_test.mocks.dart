// Mocks generated by Mockito 5.4.4 from annotations
// in faro_clean_tdd/test/features/members/repositories/member_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes

// Dart imports:
import 'dart:async' as _i4;

// Package imports:
import 'package:mockito/mockito.dart' as _i1;

// Project imports:
import 'package:faro_faro/core/errors/failures.dart' as _i6;
import 'package:faro_faro/core/network/network_info.dart' as _i3;

import 'package:faro_faro/features/members/data/datasources/member_remote_data_source.dart'
    as _i5;
import 'package:faro_faro/features/members/data/models/member_model.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMemberModel_0 extends _i1.SmartFake implements _i2.MemberModel {
  _FakeMemberModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i3.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> getConnexionStatuts() => (super.noSuchMethod(
        Invocation.method(
          #getConnexionStatuts,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [MemberRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMemberRemoteDataSource extends _i1.Mock
    implements _i5.MemberRemoteDataSource {
  MockMemberRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.MemberModel> createMember(
          {required _i2.MemberModel? member}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMember,
          [],
          {#member: member},
        ),
        returnValue: _i4.Future<_i2.MemberModel>.value(_FakeMemberModel_0(
          this,
          Invocation.method(
            #createMember,
            [],
            {#member: member},
          ),
        )),
      ) as _i4.Future<_i2.MemberModel>);

  @override
  _i4.Future<_i6.Failure?> deleteMember({required _i2.MemberModel? member}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMember,
          [],
          {#member: member},
        ),
        returnValue: _i4.Future<_i6.Failure?>.value(),
      ) as _i4.Future<_i6.Failure?>);

  @override
  _i4.Future<List<_i2.MemberModel>> fetchMembers({required int? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMembers,
          [],
          {#userId: userId},
        ),
        returnValue:
            _i4.Future<List<_i2.MemberModel>>.value(<_i2.MemberModel>[]),
      ) as _i4.Future<List<_i2.MemberModel>>);
}
