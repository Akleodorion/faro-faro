// Mocks generated by Mockito 5.4.2 from annotations
// in faro_clean_tdd/test/features/events/domain/usecases/fetch_all_events_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dartz/dartz.dart' as _i4;
import 'package:faro_clean_tdd/core/errors/failures.dart' as _i5;
import 'package:faro_clean_tdd/features/events/domain/entities/event.dart'
    as _i6;
import 'package:faro_clean_tdd/features/events/domain/repositories/event_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [EventRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventRepository extends _i1.Mock implements _i2.EventRepository {
  MockEventRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.Event>>?> fetchAllEvents() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAllEvents,
          [],
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.Failure, List<_i6.Event>>?>.value(),
      ) as _i3.Future<_i4.Either<_i5.Failure, List<_i6.Event>>?>);
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.Event>?> postAnEvent({
    required String? title,
    required String? description,
    required DateTime? date,
    required String? address,
    required double? longitude,
    required double? latitude,
    required _i6.Category? category,
    required String? imageUrl,
    required int? userId,
    required _i6.ModelEco? modelEco,
    required int? standardTicketPrice,
    required int? maxStandardTicket,
    required String? standardTicketDescription,
    required int? vipTicketPrice,
    required int? maxVipTicket,
    required String? vipTicketDescription,
    required int? vvipTicketPrice,
    required int? maxVvipTicket,
    required String? vvipTicketDescription,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postAnEvent,
          [],
          {
            #title: title,
            #description: description,
            #date: date,
            #address: address,
            #longitude: longitude,
            #latitude: latitude,
            #category: category,
            #imageUrl: imageUrl,
            #userId: userId,
            #modelEco: modelEco,
            #standardTicketPrice: standardTicketPrice,
            #maxStandardTicket: maxStandardTicket,
            #standardTicketDescription: standardTicketDescription,
            #vipTicketPrice: vipTicketPrice,
            #maxVipTicket: maxVipTicket,
            #vipTicketDescription: vipTicketDescription,
            #vvipTicketPrice: vvipTicketPrice,
            #maxVvipTicket: maxVvipTicket,
            #vvipTicketDescription: vvipTicketDescription,
          },
        ),
        returnValue: _i3.Future<_i4.Either<_i5.Failure, _i6.Event>?>.value(),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i6.Event>?>);
}
